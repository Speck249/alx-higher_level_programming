Outlines executable tests to validate `lazy_matrix_mul()`
=======================================================

Import `101-lazy_matrix_mul` module:
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


Validate expected output of `lazy_matrix_mul()`:
--------------------------------------------

No argument:
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

One argument:
    >>> m_a = [[1,2]]
    >>> lazy_matrix_mul(m_a)
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'


Invalid argument length:
    >>> m_a = [[1,2]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> m_c = [[7, 8]]
    >>> lazy_matrix_mul(m_a, m_b, m_c)
    Traceback (most recent call last):
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given


Empty argument:
    >>> m_a = [[]]
    >>> m_b = [[5, 6], [7, 8]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)


Valid usage: 
    >>> m_a = [[1,2]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> lazy_matrix_mul(m_a, m_b)
    array([[13, 16]])

    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[5, 6], [7, 8]]
    >>> lazy_matrix_mul(m_a, m_b)
    array([[19, 22],
           [43, 50]])


Float value:
    >>> m_a = [[1.1, 2.2]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> lazy_matrix_mul(m_a, m_b)
    array([[14.3, 17.6]])


Negative value:
    >>> m_a = [[1, -2], [3, 4]]
    >>> m_b = [[5, -6], [7, 8]]
    >>> lazy_matrix_mul(m_a, m_b)
    array([[ -9, -22],
           [ 43,  14]])


Multiplication by String:
    >>> m_a = "School"
    >>> m_b = [[3, 4], [5, 6]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead


    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = "School"
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: Scalar operands are not allowed, use '*' instead


Multiplication by String:
    >>> m_a = [['1', 2], [3, 4]]
    >>> m_b = [[3, 4], [5, 6]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    TypeError: invalid data type for einsum


Multiplication by String:
    >>> m_a = [[1, 2], [3, 4]]
    >>> m_b = [[3, '4'], [5, 6]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    TypeError: invalid data type for einsum


Incompatible matrix dimensions:
    >>> m_a = [[1, 2, 3], [4, 5]]
    >>> m_b = [[6, 7], [8, 9]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.


Incompatible matrix dimensions:
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> m_b = [[7, 8], [9, 10]]
    >>> lazy_matrix_mul(m_a, m_b)
    Traceback (most recent call last):
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 1) != 2 (dim 0)
