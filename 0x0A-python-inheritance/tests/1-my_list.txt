Testing Sorting Module
**********************

Module sorts & prints appended values
-------------------------------------

Test Case 0: Import Module
>>> MyList = __import__('1-my_list').MyList
-------------------------------------------

Test Case 2: Class Inheritance
>>> return issubclass(MyList, list)
True
-------------------------------------------

Test Case 3: 0 Arguments
>>> my_list.append()
Traceback (most recent call last):
  ***
TypeError: append() takes exactly one argument (0 given)
------------------------------------------

Test Case 4: Sort & Print integers
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
>>> my_list.print_sorted()
[1, 4, 2, 3, 5]
[1, 2, 3, 4, 5]
------------------------------------------

Test Case 5: Sort & Print floats
>>> my_list.append(1.0)
>>> my_list.append(4.0)
>>> my_list.append(2.0)
>>> my_list.append(3.0)
>>> my_list.append(5.0)
>>> print(my_list)
>>> my_list.print_sorted()
[1.0, 4.0, 2.0, 3.0, 5.0]
[1.0, 2.0, 3.0, 4.0, 5.0]
-----------------------------------------

Test Case 6: Sort & Print negative integers
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
>>> my_list.print_sorted()
[-1, -4, -2, -3, -5]
[-1, -2, -3, -4, -5]
----------------------------------------

Test Case 7: Sort & Print the same number
>>> my_list.append(1)
>>> my_list.append(1)
>>> my_list.append(1)
>>> my_list.append(1)
>>> my_list.append(1)
>>> print(my_list)
>>> my_list.print_sorted()
[1, 1, 1, 1, 1]
[1, 1, 1, 1, 1]
---------------------------------------

Test Case 8: Sort & Print string values
>>> my_list.append('1')
>>> my_list.append('a')
>>> my_list.append('c')
>>> my_list.append('3')
>>> my_list.append('z')
>>> print(my_list)
>>> my_list.print_sorted()
['1', 'a', 'c', '3', 'z']
['1', '3', 'a', 'c', 'z']
--------------------------------------

Test Case 9: Sort & print strings and numbers
>>> my_list.append('1')
>>> my_list.append('a')
>>> my_list.append('c')
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
>>> my_list.print_sorted()
['1', 'a', 'c', 3, 5]
Traceback (most recent call last):
    ****
TypeError: unorderable types: str() < int()
-------------------------------------

Test Case 10: Print non-existing object:
>>> print(my_list1)
Traceback (most recent call last):
  ****
NameError: name 'my_list1' is not defined
------------------------------------
